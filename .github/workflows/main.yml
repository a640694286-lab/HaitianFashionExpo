name: EAS Build iOS

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: ubuntu-latest
    env:
      EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd HaitianFashionExpo
          npm ci

      - name: Inject Firebase env from secrets (optional)
        if: ${{ secrets.EXPO_FIREBASE_API_KEY != '' }}
        run: |
          echo "EXPO_FIREBASE_API_KEY=${{ secrets.EXPO_FIREBASE_API_KEY }}" >> HaitianFashionExpo/.env
          echo "EXPO_FIREBASE_AUTH_DOMAIN=${{ secrets.EXPO_FIREBASE_AUTH_DOMAIN }}" >> HaitianFashionExpo/.env
          echo "EXPO_FIREBASE_PROJECT_ID=${{ secrets.EXPO_FIREBASE_PROJECT_ID }}" >> HaitianFashionExpo/.env
          echo "EXPO_FIREBASE_STORAGE_BUCKET=${{ secrets.EXPO_FIREBASE_STORAGE_BUCKET }}" >> HaitianFashionExpo/.env
          echo "EXPO_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.EXPO_FIREBASE_MESSAGING_SENDER_ID }}" >> HaitianFashionExpo/.env
          echo "EXPO_FIREBASE_APP_ID=${{ secrets.EXPO_FIREBASE_APP_ID }}" >> HaitianFashionExpo/.env
          echo "EXPO_FIREBASE_DATABASE_URL=${{ secrets.EXPO_FIREBASE_DATABASE_URL }}" >> HaitianFashionExpo/.env

      - name: Install eas-cli
        run: npm install -g eas-cli

      - name: Run EAS build (iOS)
        working-directory: HaitianFashionExpo
        run: |
          eas whoami || true
          eas build -p ios --profile production --non-interactive
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
